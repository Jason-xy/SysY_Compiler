@n = global i32, align 4

define i32 @gcd(i32 %m,i32 %n) #0 {
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %1 = load i32 * %m, align 4
  store i32 %1, i32 * %a, align 4
  %2 = load i32 * %n, align 4
  store i32 %2, i32 * %b, align 4
  %t = alloca i32, align 4
  %r = alloca i32, align 4
  %3 = load i32 * %m, align 4
  %4 = load i32 * %n, align 4
  %5 = icmp slt i32 %3, %4
  br i1 %5, label %6, label %7

;<label>: 6
  %8 = load i32 * %m, align 4
  store i32 %8, i32 * %t, align 4
  %9 = load i32 * %n, align 4
  store i32 %9, i32 * %m, align 4
  %10 = load i32 * %t, align 4
  store i32 %10, i32 * %n, align 4
  br label %7

;<label>: 7
  %11 = load i32 * %m, align 4
  %12 = load i32 * %n, align 4
  %13 = mod nsw i32 %11, %12
  store i32 %13, i32 * %r, align 4

;<label>: 14
  %17 = load i32 * %r, align 4
  %18 = i32 0, align 4
  %19 = icmp sne i32 %17, %18
  br i1 %19, label %15, label %16

;<label>: 15
  %20 = load i32 * %n, align 4
  store i32 %20, i32 * %m, align 4
  %21 = load i32 * %r, align 4
  store i32 %21, i32 * %n, align 4
  %22 = load i32 * %m, align 4
  %23 = load i32 * %n, align 4
  %24 = mod nsw i32 %22, %23
  store i32 %24, i32 * %r, align 4
  br label %14

;<label>: 16
  %25 = load i32 * %a, align 4
  %26 = load i32 * %b, align 4
  %27 = mul nsw i32 %25, %26
  %28 = load i32 * %n, align 4
  %29 = div nsw i32 %27, %28
  ret i32 %29
}

define i32 @main() #0 {
  %i = alloca i32, align 4
  %m = alloca i32, align 4
  %30 = call i32 @getint()
  store i32 %30, i32 * %i, align 4
  %31 = call i32 @getint()
  store i32 %31, i32 * %m, align 4
  %32 = load i32 * %i, align 4
  %33 = load i32 * %m, align 4
  %34 = call i32 @gcd(i32 %32,i32 %33)
  ret i32 %34
}
