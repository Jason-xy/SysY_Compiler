
define i32 @deepWhileBr(i32 %a,i32 %b) #0 {
  %c = alloca i32, align 4
  %1 = load i32 * %a, align 4
  %2 = load i32 * %b, align 4
  %3 = add nsw i32 %1, %2
  store i32 %3, i32 * %c, align 4

;<label>: 4
  %7 = load i32 * %c, align 4
  %8 = i32 75, align 4
  %9 = icmp slt i32 %7, %8
  br i1 %9, label %5, label %6

;<label>: 5
  %d = alloca i32, align 4
  %10 = i32 42, align 4
  store i32 %10, i32 * %d, align 4
  %11 = load i32 * %c, align 4
  %12 = i32 100, align 4
  %13 = icmp slt i32 %11, %12
  br i1 %13, label %14, label %15

;<label>: 14
  %16 = load i32 * %c, align 4
  %17 = load i32 * %d, align 4
  %18 = add nsw i32 %16, %17
  store i32 %18, i32 * %c, align 4
  %19 = load i32 * %c, align 4
  %20 = i32 99, align 4
  %21 = icmp sgt i32 %19, %20
  br i1 %21, label %22, label %23

;<label>: 22
  %e = alloca i32, align 4
  %24 = load i32 * %d, align 4
  %25 = i32 2, align 4
  %26 = mul nsw i32 %24, %25
  store i32 %26, i32 * %e, align 4
  %27 = i32 1, align 4
  %28 = i32 1, align 4
  %29 = icmp seq i32 %27, %28
  br i1 %29, label %30, label %31

;<label>: 30
  %32 = load i32 * %e, align 4
  %33 = i32 2, align 4
  %34 = mul nsw i32 %32, %33
  store i32 %34, i32 * %c, align 4
  br label %31

;<label>: 31
  br label %23

;<label>: 23
  br label %15

;<label>: 15
  br label %4

;<label>: 6
  %35 = load i32 * %c, align 4
  ret i32 %35
}

define i32 @main() #0 {
  %p = alloca i32, align 4
  %36 = i32 2, align 4
  store i32 %36, i32 * %p, align 4
  %37 = load i32 * %p, align 4
  %38 = load i32 * %p, align 4
  %39 = call i32 @deepWhileBr(i32 %37,i32 %38)
  ret i32 %39
}
