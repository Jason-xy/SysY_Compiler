
define i32 @dec2bin(i32 %a) #0 {
  %res = alloca i32, align 4
  %k = alloca i32, align 4
  %i = alloca i32, align 4
  %temp = alloca i32, align 4
  %1 = i32 0, align 4
  store i32 %1, i32 * %res, align 4
  %2 = i32 1, align 4
  store i32 %2, i32 * %k, align 4
  %3 = load i32 * %a, align 4
  store i32 %3, i32 * %temp, align 4

;<label>: 4
  %7 = load i32 * %temp, align 4
  %8 = i32 0, align 4
  %9 = icmp sne i32 %7, %8
  br i1 %9, label %5, label %6

;<label>: 5
  %10 = load i32 * %temp, align 4
  %11 = i32 2, align 4
  %12 = mod nsw i32 %10, %11
  store i32 %12, i32 * %i, align 4
  %13 = load i32 * %k, align 4
  %14 = load i32 * %i, align 4
  %15 = mul nsw i32 %13, %14
  %16 = load i32 * %res, align 4
  %17 = add nsw i32 %15, %16
  store i32 %17, i32 * %res, align 4
  %18 = load i32 * %k, align 4
  %19 = i32 10, align 4
  %20 = mul nsw i32 %18, %19
  store i32 %20, i32 * %k, align 4
  %21 = load i32 * %temp, align 4
  %22 = i32 2, align 4
  %23 = div nsw i32 %21, %22
  store i32 %23, i32 * %temp, align 4
  br label %4

;<label>: 6
  %24 = load i32 * %res, align 4
  ret i32 %24
}

define i32 @main() #0 {
  %a = alloca i32, align 4
  %25 = i32 400, align 4
  store i32 %25, i32 * %a, align 4
  %res = alloca i32, align 4
  %26 = load i32 * %a, align 4
  %27 = call i32 @dec2bin(i32 %26)
  store i32 %27, i32 * %res, align 4
  %28 = load i32 * %res, align 4
  %29 = call i32 @putint(i32 %28)
  %30 = i32 10, align 4
  store i32 %30, i32 * %res, align 4
  %31 = load i32 * %res, align 4
  %32 = call i32 @putch(i32 %31)
  %33 = i32 0, align 4
  ret i32 %33
}
