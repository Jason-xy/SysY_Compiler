
define i32 @fsqrt(i32 %a) #0 {
  %x0 = alloca i32, align 4
  store i32 0, i32 * %x0, align 4
  %x1 = alloca i32, align 4
  %1 = load i32 * %a, align 4
  %2 = i32 2, align 4
  %3 = div nsw i32 %1, %2
  store i32 %3, i32 * %x1, align 4

;<label>: 4
  %7 = load i32 * %x0, align 4
  %8 = load i32 * %x1, align 4
  %9 = sub nsw i32 %7, %8
  %10 = i32 0, align 4
  %11 = icmp sne i32 %9, %10
  br i1 %11, label %5, label %6

;<label>: 5
  %12 = load i32 * %x1, align 4
  store i32 %12, i32 * %x0, align 4
  %13 = load i32 * %x0, align 4
  %14 = load i32 * %a, align 4
  %15 = load i32 * %x0, align 4
  %16 = div nsw i32 %14, %15
  %17 = add nsw i32 %13, %16
  store i32 %17, i32 * %x1, align 4
  %18 = load i32 * %x1, align 4
  %19 = i32 2, align 4
  %20 = div nsw i32 %18, %19
  store i32 %20, i32 * %x1, align 4
  br label %4

;<label>: 6
  %21 = load i32 * %x1, align 4
  ret i32 %21
}

define i32 @main() #0 {
  %a = alloca i32, align 4
  %22 = i32 400, align 4
  store i32 %22, i32 * %a, align 4
  %res = alloca i32, align 4
  %23 = load i32 * %a, align 4
  %24 = call i32 @fsqrt(i32 %23)
  store i32 %24, i32 * %res, align 4
  %25 = load i32 * %res, align 4
  %26 = call i32 @putint(i32 %25)
  %27 = i32 10, align 4
  store i32 %27, i32 * %res, align 4
  %28 = load i32 * %res, align 4
  %29 = call i32 @putch(i32 %28)
  %30 = i32 0, align 4
  ret i32 %30
}
