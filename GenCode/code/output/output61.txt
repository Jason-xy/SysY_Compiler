
define i32 @main() #0 {
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %c = alloca i32, align 4
  %d = alloca i32, align 4
  %1 = i32 10, align 4
  store i32 %1, i32 * %a, align 4
  %2 = i32 6, align 4
  store i32 %2, i32 * %b, align 4
  %3 = i32 4, align 4
  store i32 %3, i32 * %c, align 4
  %4 = i32 5, align 4
  store i32 %4, i32 * %d, align 4
  %t = alloca i32, align 4
  %5 = load i32 * %b, align 4
  %6 = load i32 * %c, align 4
  %7 = add nsw i32 %5, %6
  %8 = load i32 * %a, align 4
  %9 = icmp seq i32 %7, %8
  %10 = load i32 * %d, align 4
  %11 = load i32 * %a, align 4
  %12 = i32 2, align 4
  %13 = div nsw i32 %11, %12
  %14 = icmp sne i32 %10, %13
  %15 = icmp and i32 %9, %14
  br i1 %15, label %16, label %17

;<label>: 16
  %18 = load i32 * %b, align 4
  %19 = load i32 * %c, align 4
  %20 = load i32 * %d, align 4
  %21 = div nsw i32 %19, %20
  %22 = i32 2, align 4
  %23 = mul nsw i32 %21, %22
  %24 = add nsw i32 %18, %23
  store i32 %24, i32 * %t, align 4
  %25 = load i32 * %t, align 4
  %26 = call i32 @putint(i32 %25)
  br label %17

;<label>: 17
  %27 = load i32 * %c, align 4
  %28 = i32 0, align 4
  %29 = icmp slt i32 %27, %28
  %30 = load i32 * %a, align 4
  %31 = load i32 * %c, align 4
  %32 = sub nsw i32 %30, %31
  %33 = load i32 * %b, align 4
  %34 = icmp seq i32 %32, %33
  %35 = load i32 * %a, align 4
  %36 = load i32 * %d, align 4
  %37 = i32 2, align 4
  %38 = mul nsw i32 %36, %37
  %39 = icmp sne i32 %35, %38
  %40 = icmp and i32 %34, %39
  %41 = icmp sor i32 %29, %40
  br i1 %41, label %42, label %43

;<label>: 42
  %44 = i32 1, align 4
  store i32 %44, i32 * %t, align 4
  %45 = load i32 * %t, align 4
  %46 = call i32 @putint(i32 %45)
  br label %43

;<label>: 43
  %47 = i32 0, align 4
  ret i32 %47
}
