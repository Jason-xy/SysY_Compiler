@n = global i32, align 4

define i32 @fib(i32 %p) #0 {
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %c = alloca i32, align 4
  %1 = i32 0, align 4
  store i32 %1, i32 * %a, align 4
  %2 = i32 1, align 4
  store i32 %2, i32 * %b, align 4
  %3 = load i32 * %p, align 4
  %4 = i32 0, align 4
  %5 = icmp seq i32 %3, %4
  br i1 %5, label %6, label %7

;<label>: 6
  %8 = i32 0, align 4
  ret i32 %8
  br label %7

;<label>: 7
  %9 = load i32 * %p, align 4
  %10 = i32 1, align 4
  %11 = icmp seq i32 %9, %10
  br i1 %11, label %12, label %13

;<label>: 12
  %14 = i32 1, align 4
  ret i32 %14
  br label %13

;<label>: 13

;<label>: 15
  %18 = load i32 * %p, align 4
  %19 = i32 1, align 4
  %20 = icmp sgt i32 %18, %19
  br i1 %20, label %16, label %17

;<label>: 16
  %21 = load i32 * %a, align 4
  %22 = load i32 * %b, align 4
  %23 = add nsw i32 %21, %22
  store i32 %23, i32 * %c, align 4
  %24 = load i32 * %b, align 4
  store i32 %24, i32 * %a, align 4
  %25 = load i32 * %c, align 4
  store i32 %25, i32 * %b, align 4
  %26 = load i32 * %p, align 4
  %27 = i32 1, align 4
  %28 = sub nsw i32 %26, %27
  store i32 %28, i32 * %p, align 4
  br label %15

;<label>: 17
  %29 = load i32 * %c, align 4
  ret i32 %29
}

define i32 @main() #0 {
  %30 = call i32 @getint()
  store i32 %30, i32 * %n, align 4
  %res = alloca i32, align 4
  %31 = load i32 * %n, align 4
  %32 = call i32 @fib(i32 %31)
  store i32 %32, i32 * %res, align 4
  %33 = load i32 * %res, align 4
  ret i32 %33
}
