
define i32 @main() #0 {
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %c = alloca i32, align 4
  %d = alloca i32, align 4
  %result = alloca i32, align 4
  %1 = i32 5, align 4
  store i32 %1, i32 * %a, align 4
  %2 = i32 5, align 4
  store i32 %2, i32 * %b, align 4
  %3 = i32 1, align 4
  store i32 %3, i32 * %c, align 4
  %4 = i32 -2, align 4
  store i32 %4, i32 * %d, align 4
  %5 = i32 2, align 4
  store i32 %5, i32 * %result, align 4
  %6 = load i32 * %d, align 4
  %7 = i32 1, align 4
  %8 = mul nsw i32 %6, %7
  %9 = i32 2, align 4
  %10 = div nsw i32 %8, %9
  %11 = i32 0, align 4
  %12 = icmp slt i32 %10, %11
  %13 = load i32 * %a, align 4
  %14 = load i32 * %b, align 4
  %15 = sub nsw i32 %13, %14
  %16 = i32 0, align 4
  %17 = icmp sne i32 %15, %16
  %18 = load i32 * %c, align 4
  %19 = i32 3, align 4
  %20 = add nsw i32 %18, %19
  %21 = i32 2, align 4
  %22 = mod nsw i32 %20, %21
  %23 = i32 0, align 4
  %24 = icmp sne i32 %22, %23
  %25 = icmp and i32 %17, %24
  %26 = icmp sor i32 %12, %25
  br i1 %26, label %27, label %28

;<label>: 27
  %29 = load i32 * %result, align 4
  %30 = call i32 @putint(i32 %29)
  br label %28

;<label>: 28
  %31 = load i32 * %d, align 4
  %32 = i32 2, align 4
  %33 = mod nsw i32 %31, %32
  %34 = i32 67, align 4
  %35 = add nsw i32 %33, %34
  %36 = i32 0, align 4
  %37 = icmp slt i32 %35, %36
  %38 = load i32 * %a, align 4
  %39 = load i32 * %b, align 4
  %40 = sub nsw i32 %38, %39
  %41 = i32 0, align 4
  %42 = icmp sne i32 %40, %41
  %43 = load i32 * %c, align 4
  %44 = i32 2, align 4
  %45 = add nsw i32 %43, %44
  %46 = i32 2, align 4
  %47 = mod nsw i32 %45, %46
  %48 = i32 0, align 4
  %49 = icmp sne i32 %47, %48
  %50 = icmp and i32 %42, %49
  %51 = icmp sor i32 %37, %50
  br i1 %51, label %52, label %53

;<label>: 52
  %54 = i32 4, align 4
  store i32 %54, i32 * %result, align 4
  %55 = load i32 * %result, align 4
  %56 = call i32 @putint(i32 %55)
  br label %53

;<label>: 53
  %57 = i32 0, align 4
  ret i32 %57
}
