
define i32 @FourWhile() #0 {
  %a = alloca i32, align 4
  %1 = i32 5, align 4
  store i32 %1, i32 * %a, align 4
  %b = alloca i32, align 4
  %c = alloca i32, align 4
  %2 = i32 6, align 4
  store i32 %2, i32 * %b, align 4
  %3 = i32 7, align 4
  store i32 %3, i32 * %c, align 4
  %d = alloca i32, align 4
  %4 = i32 10, align 4
  store i32 %4, i32 * %d, align 4

;<label>: 5
  %8 = load i32 * %a, align 4
  %9 = i32 20, align 4
  %10 = icmp slt i32 %8, %9
  br i1 %10, label %6, label %7

;<label>: 6
  %11 = load i32 * %a, align 4
  %12 = i32 3, align 4
  %13 = add nsw i32 %11, %12
  store i32 %13, i32 * %a, align 4

;<label>: 14
  %17 = load i32 * %b, align 4
  %18 = i32 10, align 4
  %19 = icmp slt i32 %17, %18
  br i1 %19, label %15, label %16

;<label>: 15
  %20 = load i32 * %b, align 4
  %21 = i32 1, align 4
  %22 = add nsw i32 %20, %21
  store i32 %22, i32 * %b, align 4

;<label>: 23
  %26 = load i32 * %c, align 4
  %27 = i32 7, align 4
  %28 = icmp seq i32 %26, %27
  br i1 %28, label %24, label %25

;<label>: 24
  %29 = load i32 * %c, align 4
  %30 = i32 1, align 4
  %31 = sub nsw i32 %29, %30
  store i32 %31, i32 * %c, align 4

;<label>: 32
  %35 = load i32 * %d, align 4
  %36 = i32 20, align 4
  %37 = icmp slt i32 %35, %36
  br i1 %37, label %33, label %34

;<label>: 33
  %38 = load i32 * %d, align 4
  %39 = i32 3, align 4
  %40 = add nsw i32 %38, %39
  store i32 %40, i32 * %d, align 4
  br label %32

;<label>: 34
  %41 = load i32 * %d, align 4
  %42 = i32 1, align 4
  %43 = sub nsw i32 %41, %42
  store i32 %43, i32 * %d, align 4
  br label %23

;<label>: 25
  %44 = load i32 * %c, align 4
  %45 = i32 1, align 4
  %46 = add nsw i32 %44, %45
  store i32 %46, i32 * %c, align 4
  br label %14

;<label>: 16
  %47 = load i32 * %b, align 4
  %48 = i32 2, align 4
  %49 = sub nsw i32 %47, %48
  store i32 %49, i32 * %b, align 4
  br label %5

;<label>: 7
  %50 = load i32 * %a, align 4
  %51 = load i32 * %b, align 4
  %52 = load i32 * %d, align 4
  %53 = add nsw i32 %51, %52
  %54 = add nsw i32 %50, %53
  %55 = load i32 * %c, align 4
  %56 = add nsw i32 %54, %55
  ret i32 %56
}

define i32 @main() #0 {
  %57 = call i32 @FourWhile()
  ret i32 %57
}
