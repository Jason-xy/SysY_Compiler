
define i32 @main() #0 {
  %a = alloca i32, align 4
  %b = alloca i32, align 4
  %c = alloca i32, align 4
  %d = alloca i32, align 4
  %1 = i32 3, align 4
  store i32 %1, i32 * %a, align 4
  %2 = i32 8, align 4
  store i32 %2, i32 * %b, align 4
  %3 = i32 -4, align 4
  store i32 %3, i32 * %c, align 4
  %4 = i32 15, align 4
  store i32 %4, i32 * %d, align 4
  %t = alloca i32, align 4
  %5 = load i32 * %d, align 4
  %6 = load i32 * %b, align 4
  %7 = load i32 * %a, align 4
  %8 = sub nsw i32 %6, %7
  %9 = mod nsw i32 %5, %8
  %10 = i32 0, align 4
  %11 = icmp sne i32 %9, %10
  %12 = load i32 * %a, align 4
  %13 = i32 0, align 4
  %14 = icmp sgt i32 %12, %13
  %15 = icmp and i32 %11, %14
  %16 = load i32 * %d, align 4
  %17 = i32 3, align 4
  %18 = mod nsw i32 %16, %17
  %19 = i32 0, align 4
  %20 = icmp seq i32 %18, %19
  %21 = load i32 * %c, align 4
  %22 = i32 0, align 4
  %23 = icmp sgt i32 %21, %22
  %24 = icmp and i32 %20, %23
  %25 = icmp sor i32 %15, %24
  br i1 %25, label %26, label %27

;<label>: 26
  %28 = load i32 * %d, align 4
  %29 = load i32 * %c, align 4
  %30 = add nsw i32 %28, %29
  %31 = sub nsw i32 %30, %0
  store i32 %31, i32 * %t, align 4
  %32 = load i32 * %t, align 4
  %33 = call i32 @putint(i32 %32)
  br label %27

;<label>: 27
  %34 = i32 0, align 4
  ret i32 %34
}
