@N = global i32, align 4
@newline = global i32, align 4

define i32 @factor(i32 %n) #0 {
  %i = alloca i32, align 4
  %sum = alloca i32, align 4
  %1 = i32 0, align 4
  store i32 %1, i32 * %sum, align 4
  %2 = i32 1, align 4
  store i32 %2, i32 * %i, align 4

;<label>: 3
  %6 = load i32 * %i, align 4
  %7 = load i32 * %n, align 4
  %8 = i32 1, align 4
  %9 = add nsw i32 %7, %8
  %10 = icmp slt i32 %6, %9
  br i1 %10, label %4, label %5

;<label>: 4
  %11 = load i32 * %n, align 4
  %12 = load i32 * %i, align 4
  %13 = mod nsw i32 %11, %12
  %14 = i32 0, align 4
  %15 = icmp seq i32 %13, %14
  br i1 %15, label %16, label %17

;<label>: 16
  %18 = load i32 * %sum, align 4
  %19 = load i32 * %i, align 4
  %20 = add nsw i32 %18, %19
  store i32 %20, i32 * %sum, align 4
  br label %17

;<label>: 17
  %21 = load i32 * %i, align 4
  %22 = i32 1, align 4
  %23 = add nsw i32 %21, %22
  store i32 %23, i32 * %i, align 4
  br label %3

;<label>: 5
  %24 = load i32 * %sum, align 4
  ret i32 %24
}

define i32 @main() #0 {
  %25 = i32 4, align 4
  store i32 %25, i32 * %N, align 4
  %26 = i32 10, align 4
  store i32 %26, i32 * %newline, align 4
  %i = alloca i32, align 4
  %m = alloca i32, align 4
  %27 = i32 1478, align 4
  store i32 %27, i32 * %m, align 4
  %t = alloca i32, align 4
  %28 = load i32 * %m, align 4
  %29 = call i32 @factor(i32 %28)
  ret i32 %29
}
